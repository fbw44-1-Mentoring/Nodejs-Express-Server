{"version":3,"sources":["components/Header.js","components/SearchEmoji.js","components/Emoji.js","components/EmojiContainer.js","App.js","index.js"],"names":["Header","className","style","textAlign","margin","padding","href","data-icon","data-size","data-show-count","SearchEmoji","setSearchValue","useContext","MyContext","onChange","e","target","value","display","width","fontSize","type","name","Emoji","props","height","justifyContent","alignItems","boxShadow","borderRadius","symbol","EmojiContainer","emojiData","flexWrap","map","emo","title","createContext","App","useState","data","setEmojiData","searchValue","useEffect","filteredEmoji","filter","keywords","match","filterEmojis","Provider","reactDOM","render","document","getElementById"],"mappings":"8KAGe,SAASA,IACpB,OACI,sBAAKC,UAAU,SAASC,MAAO,CAACC,UAAU,SAASC,OAAO,YAAYC,QAAQ,QAA9E,UACA,+DACA,2EACA,sBAAKJ,UAAU,aAAf,UACE,cAAC,IAAD,CACEK,KAAK,4BACLC,YAAU,eACVC,YAAU,QACVC,mBAAiB,EAJnB,kBAOgB,IARlB,WAUE,cAAC,IAAD,CACEH,KAAK,4BACLC,YAAU,sBACVC,YAAU,QACVC,mBAAiB,EAJnB,wBCfK,SAASC,IACtB,IAAOC,EAAiBC,qBAAWC,GAA5BF,eACP,OACE,qBAAKV,UAAU,SAASC,MAAO,CAACE,OAAO,SAASD,UAAU,UAA1D,SACE,uBAAOW,SAAU,SAACC,GAAD,OAAKJ,EAAeI,EAAEC,OAAOC,QAAQf,MAAO,CAACgB,QAAQ,eAAeC,MAAM,QAAQC,SAAS,QAASC,KAAK,OAAOC,KAAK,kBCJ7H,SAASC,EAAMC,GAC1B,OACI,qBAAKvB,UAAU,WAAWC,MAAO,CAACE,OAAO,OAAOe,MAAM,QAAQM,OAAO,QAAQP,QAAQ,OAAOQ,eAAe,SAASC,WAAW,SAASC,UAAU,4CAA4CC,aAAa,QAA3M,SACA,mBAAG3B,MAAO,CAACkB,SAAS,QAApB,SAA8BI,EAAMM,WCH7B,SAASC,IAClB,IAAKC,EAAapB,qBAAWC,GAAxBmB,UACP,OACI,qBAAK/B,UAAU,YAAYC,MAAO,CAACgB,QAAQ,OAAOe,SAAS,OAAOP,eAAe,UAAjF,SACCM,EAAUE,KAAI,SAACC,GACd,OACC,cAACZ,EAAD,CAAuBO,OAAQK,EAAIL,QAAvBK,EAAIC,Y,WCEdvB,EAAYwB,wBAAc,MA8BxBC,MA1Bf,WACE,MAA+BC,mBAASC,GAAxC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAmCF,mBAAS,IAA5C,mBAAOG,EAAP,KAAmB/B,EAAnB,KAaA,OALAgC,qBAAU,YANS,WAEjB,IAAIC,EAAeJ,EAAKK,QAAO,SAAAV,GAAG,OAAEA,EAAIW,SAASC,MAAML,MACvDD,EAAaG,GAKbI,KACA,CAACN,IAGD,cAAC7B,EAAUoC,SAAX,CAAoBhC,MAAO,CAACe,YAAUS,eAAaC,cAAY/B,kBAA/D,SACA,sBAAKV,UAAU,MAAf,UACE,cAACD,EAAD,IACA,cAACU,EAAD,IACA,cAACqB,EAAD,U,cC9BNmB,EAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,U","file":"static/js/main.486e944e.chunk.js","sourcesContent":["import React from 'react'\nimport GitHubButton from \"react-github-btn\";\n\nexport default function Header() {\n    return (\n        <div className=\"header\" style={{textAlign:\"center\",margin:\"20px auto\",padding:\"20px\"}}>\n        <h1>Search Emoji App &#x1F984;</h1>\n        <p>This is Simple Emoji Search App with React</p>\n        <div className=\"github-btn\">\n          <GitHubButton\n            href=\"https://github.com/nrcool\"\n            data-icon=\"octicon-star\"\n            data-size=\"large\"\n            data-show-count={true}\n          >\n            Star\n          </GitHubButton>{\" \"}\n          &nbsp;&nbsp;\n          <GitHubButton\n            href=\"https://github.com/nrcool\"\n            data-icon=\"octicon-repo-forked\"\n            data-size=\"large\"\n            data-show-count={true}\n          >\n            Fork\n          </GitHubButton>\n        </div>\n      </div>\n    )\n}\n","import React, { useContext } from \"react\";\nimport { MyContext } from \"../App\";\n\nexport default function SearchEmoji() {\n  const {setSearchValue} =useContext(MyContext)\n  return (\n    <div className=\"search\" style={{margin:\"0 auto\",textAlign:\"center\"}}>\n      <input onChange={(e)=>setSearchValue(e.target.value)} style={{display:\"inline-block\",width:\"300px\",fontSize:\"20px\"}} type=\"text\" name=\"searchemoji\" />\n    </div>\n  );\n}\n","import React from 'react'\n\n\nexport default function Emoji(props) {\n    return (\n        <div className=\"emojibox\" style={{margin:\"10px\",width:\"200px\",height:\"200px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",boxShadow:\"2px 3px 5px black,inset 1px 1px 5px white\",borderRadius:\"20px\"}}>\n        <p style={{fontSize:\"30px\"}}>{props.symbol}</p>\n      </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { MyContext } from '../App';\nimport Emoji from \"./Emoji\"\nexport default function EmojiContainer() {\n      let {emojiData} = useContext(MyContext)\n    return (\n        <div className=\"container\" style={{display:\"flex\",flexWrap:\"wrap\",justifyContent:\"center\"}}>\n        {emojiData.map((emo) => {\n          return (\n           <Emoji key={emo.title} symbol={emo.symbol}/>\n          );\n        })}\n      </div>\n    )\n}\n","import React, { createContext, useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchEmoji from \"./components/SearchEmoji\";\nimport EmojiContainer from \"./components/EmojiContainer\";\nimport data from \"./json/emoji.json\"\n//create a context\n//wrap you whole application within your context provider\n//provide your context with values/data\n//consume context\n\n//creating container empty\nexport const MyContext = createContext(null)\n\n\n\nfunction App() {\n  const [emojiData,setEmojiData]=useState(data)\n  const [searchValue,setSearchValue]=useState(\"\")\n\n  const filterEmojis=()=>{\n   \n    let filteredEmoji= data.filter(emo=>emo.keywords.match(searchValue))\n    setEmojiData(filteredEmoji)\n  }\n\n  useEffect(()=>{\n    //shouldComponentUpdate or //componentDidUpdate\n    filterEmojis()\n  },[searchValue])\n\n  return (\n    <MyContext.Provider value={{emojiData,setEmojiData,searchValue,setSearchValue}}>\n    <div className=\"App\">\n      <Header />\n      <SearchEmoji />\n      <EmojiContainer />\n    </div> \n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}